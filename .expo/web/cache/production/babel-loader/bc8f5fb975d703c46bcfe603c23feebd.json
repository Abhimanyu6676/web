{"ast":null,"code":"import React from\"react\";import PropTypes from\"prop-types\";import{Helmet}from\"react-helmet\";import{StaticQuery}from\"gatsby\";function SEO(_ref){var description=_ref.description,lang=_ref.lang,meta=_ref.meta,title=_ref.title;description=\"\";lang=\"\";return React.createElement(StaticQuery,{query:\"63159454\",render:function render(_ref2){var _site$siteMetadata,_site$siteMetadata2;var site=_ref2.site;var metaDescription=description||site.siteMetadata.description;var defaultTitle=(_site$siteMetadata=site.siteMetadata)==null?void 0:_site$siteMetadata.title;console.log(\">>>>>>>>>>>>>>\");console.log(site);return React.createElement(Helmet,{htmlAttributes:{lang:lang},title:title,titleTemplate:defaultTitle?\"%s | \"+defaultTitle:null,meta:[{name:\"description\",content:metaDescription},{property:\"og:title\",content:title},{property:\"og:description\",content:metaDescription},{property:\"og:type\",content:\"website\"},{name:\"twitter:card\",content:\"summary\"},{name:\"twitter:creator\",content:((_site$siteMetadata2=site.siteMetadata)==null?void 0:_site$siteMetadata2.author)||\"\"},{name:\"twitter:title\",content:title},{name:\"twitter:description\",content:metaDescription}].concat(meta)});}});}SEO.defaultProps={lang:\"en\",meta:[],description:\"\"};SEO.propTypes={description:PropTypes.string,lang:PropTypes.string,meta:PropTypes.arrayOf(PropTypes.object),title:PropTypes.string.isRequired};export default SEO;","map":{"version":3,"sources":["C:/Users/admin/react/Website/web/src/components/seo.js"],"names":["React","PropTypes","Helmet","StaticQuery","SEO","description","lang","meta","title","site","metaDescription","siteMetadata","defaultTitle","console","log","name","content","property","author","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"mappings":"AAOA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,MAAT,KAAuB,cAAvB,CACA,OAASC,WAAT,KAAqC,QAArC,CAEA,QAASC,CAAAA,GAAT,MAAiD,IAAlCC,CAAAA,WAAkC,MAAlCA,WAAkC,CAArBC,IAAqB,MAArBA,IAAqB,CAAfC,IAAe,MAAfA,IAAe,CAATC,KAAS,MAATA,KAAS,CAC/CH,WAAW,CAAG,EAAd,CACAC,IAAI,CAAG,EAAP,CACA,MACE,qBAAC,WAAD,EACE,KAAK,WADP,CAYE,MAAM,CAAE,sBAAc,+CAAXG,CAAAA,IAAW,OAAXA,IAAW,CACpB,GAAMC,CAAAA,eAAe,CAAGL,WAAW,EAAII,IAAI,CAACE,YAAL,CAAkBN,WAAzD,CACA,GAAMO,CAAAA,YAAY,qBAAGH,IAAI,CAACE,YAAR,eAAG,mBAAmBH,KAAxC,CACAK,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACA,MACE,qBAAC,MAAD,EACE,cAAc,CAAE,CACdH,IAAI,CAAJA,IADc,CADlB,CAIE,KAAK,CAAEE,KAJT,CAKE,aAAa,CAAEI,YAAY,SAAWA,YAAX,CAA4B,IALzD,CAME,IAAI,CAAE,CACJ,CACEG,IAAI,cADN,CAEEC,OAAO,CAAEN,eAFX,CADI,CAKJ,CACEO,QAAQ,WADV,CAEED,OAAO,CAAER,KAFX,CALI,CASJ,CACES,QAAQ,iBADV,CAEED,OAAO,CAAEN,eAFX,CATI,CAaJ,CACEO,QAAQ,UADV,CAEED,OAAO,UAFT,CAbI,CAiBJ,CACED,IAAI,eADN,CAEEC,OAAO,UAFT,CAjBI,CAqBJ,CACED,IAAI,kBADN,CAEEC,OAAO,CAAE,sBAAAP,IAAI,CAACE,YAAL,mCAAmBO,MAAnB,KAFX,CArBI,CAyBJ,CACEH,IAAI,gBADN,CAEEC,OAAO,CAAER,KAFX,CAzBI,CA6BJ,CACEO,IAAI,sBADN,CAEEC,OAAO,CAAEN,eAFX,CA7BI,EAiCJS,MAjCI,CAiCGZ,IAjCH,CANR,EADF,CA2CD,CA5DH,EADF,CAmED,CAEDH,GAAG,CAACgB,YAAJ,CAAmB,CACjBd,IAAI,KADa,CAEjBC,IAAI,CAAE,EAFW,CAGjBF,WAAW,GAHM,CAAnB,CAMAD,GAAG,CAACiB,SAAJ,CAAgB,CACdhB,WAAW,CAAEJ,SAAS,CAACqB,MADT,CAEdhB,IAAI,CAAEL,SAAS,CAACqB,MAFF,CAGdf,IAAI,CAAEN,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,CAHQ,CAIdhB,KAAK,CAAEP,SAAS,CAACqB,MAAV,CAAiBG,UAJV,CAAhB,CAOA,cAAerB,CAAAA,GAAf","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  description = \"\"\r\n  lang = \"\"\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n      render={({ site }) => {\r\n        const metaDescription = description || site.siteMetadata.description\r\n        const defaultTitle = site.siteMetadata?.title\r\n        console.log(\">>>>>>>>>>>>>>\")\r\n        console.log(site)\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: site.siteMetadata?.author || ``,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ].concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"]},"metadata":{},"sourceType":"module"}