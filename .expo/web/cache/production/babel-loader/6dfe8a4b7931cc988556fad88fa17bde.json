{"ast":null,"code":"import React,{useRef,useState}from'react';import{Container,Row,Col}from'react-bootstrap';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{useStaticQuery}from'gatsby';import Img from\"gatsby-image\";import styles from\"./index.module.scss\";export default(function(props){var thumbnailRef=useRef();var sliderRef=useRef();var _useState=useState(0),width=_useState[0],setWidth=_useState[1];var _useState2=useState(0),left=_useState2[0],setLeft=_useState2[1];var data=useStaticQuery(\"1886479502\");var slideImage=function slideImage(direction){switch(direction){case\"next\":if(left<=7)setLeft(left+1);break;case\"pre\":if(left>0)setLeft(left-1);break;default:break;}};return React.createElement(Container,{fluid:true},React.createElement(Row,null,React.createElement(Col,{sm:true},React.createElement(Row,{className:styles.ImageSliderContainer+\" \"},React.createElement(Col,{sm:2,className:styles.thumbnailsCol+\" -bg-fff- p-0\"},React.createElement(\"div\",{className:\"-bg-fff- d-flex -jus-c--md-up- \"+styles.thumbnailContainer},React.createElement(\"div\",{ref:thumbnailRef,className:\"-bg-fff- d-flex flex-md-column position-relative \",style:{position:\"absolute\",transition:\"top 1s , left 1s\",top:\"-\"+function(){var getCurrentSlideTopOffset=function getCurrentSlideTopOffset(slide){var top=0;if(slide<=0)return top;else{top=slide*70;}return top;};if(Dimensions.get(\"window\").width<=576||left<=0)return 0;var totalSlides=8;var ScrollViewHeight=totalSlides*70;if(thumbnailRef.current&&ScrollViewHeight>thumbnailRef.current.offsetHeight){var viewHeight=thumbnailRef.current.offsetHeight;var currSlideTop=getCurrentSlideTopOffset(left);var currSlideBottom=getCurrentSlideTopOffset(left)+70;var desiredMoveOffset=currSlideBottom+(viewHeight/2-35);if(currSlideBottom>viewHeight/2){var move=(left-viewHeight/2/70)*70;if(move>0&&move<=ScrollViewHeight-viewHeight)return move;else if(move>ScrollViewHeight-viewHeight)return ScrollViewHeight-viewHeight;}}return 0;}()+\"px\",left:\"-\"+function(){var getCurrentSlideTopOffset=function getCurrentSlideTopOffset(slide){var top=0;if(slide<=0)return top;else{top=slide*70;}return top;};if(Dimensions.get(\"window\").width>576||left<=0)return 0;var totalSlides=8;var ScrollViewHeight=totalSlides*70;var viewWidth=Dimensions.get(\"window\").width;console.log(\"calculating offset >> \"+viewWidth);if(thumbnailRef.current&&ScrollViewHeight>viewWidth){var currSlideLeft=getCurrentSlideTopOffset(left);var currSlideRight=getCurrentSlideTopOffset(left)+70;var desiredMoveOffset=currSlideRight+(viewWidth/2-35);if(currSlideRight>viewWidth/2){var move=(left-viewWidth/2/70)*70;if(move>0&&move<=ScrollViewHeight-viewWidth)return move;else if(move>ScrollViewHeight-viewWidth)return ScrollViewHeight-viewWidth;}}return 0;}()+\"px\"}},data.thumbs.edges.map(function(edge){return React.createElement(\"div\",{className:\"-my-10- -mx-10-\",style:{minHeight:50,minWidth:50}},React.createElement(Img,{fluid:edge.node.childImageSharp.fluid}));})),React.createElement(\"div\",{className:styles.thumbnailArrow+\" \"+styles.thumbnailDown+\" \"+styles.thumbnailRight,onClick:function onClick(){slideImage(\"next\");}}),React.createElement(\"div\",{className:styles.thumbnailArrow+\" \"+styles.thumbnailUp+\" \"+styles.thumbnailLeft,onClick:function onClick(){slideImage(\"pre\");}}))),React.createElement(Col,{sm:10,style:{overflow:\"hidden\"}},React.createElement(\"div\",{ref:sliderRef,style:{width:data.pics.edges.length*100+\"%\",position:\"absolute\",top:0,left:\"-\"+left*100+\"%\",transition:\"left 1s\",display:\"flex\",flexDirection:\"row\"}},data.pics.edges.map(function(edge){return React.createElement(\"div\",{className:\"\",style:{flex:1}},React.createElement(Img,{fluid:edge.node.childImageSharp.fluid}));}))))),React.createElement(Col,{sm:true,style:{backgroundColor:\"green\"}},\"Image Slider\")));});","map":{"version":3,"sources":["C:/Users/admin/react/Website/web/src/components/screens/homePage/section2/index.tsx"],"names":["thumbnailRef","useRef","sliderRef","width","setWidth","useState","left","setLeft","data","useStaticQuery","slideImage","styles","position","transition","top","getCurrentSlideTopOffset","slide","Dimensions","totalSlides","ScrollViewHeight","viewHeight","currSlideTop","currSlideBottom","desiredMoveOffset","move","viewWidth","console","currSlideLeft","currSlideRight","minHeight","minWidth","edge","overflow","display","flexDirection","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Dimensions } from 'react-native';\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport Img from \"gatsby-image\";\r\nimport styles from \"./index.module.scss\";\r\n\r\n\r\n\r\ninterface Props { }\r\nexport default (props: Props) => {\r\n    const thumbnailRef = useRef()\r\n    const sliderRef = useRef()\r\n    const [width, setWidth] = useState(0)\r\n    const [left, setLeft] = useState(0)\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query AssetsPhotos {\r\n        thumbs: allFile(filter: {extension: {regex: \"/(jpg)|(jpeg)|(png)/\"}, dir: {eq: \"C:/Users/admin/react/Website/web/src/images/Products/Strips/aurora_strip\"}}) {\r\n          edges {\r\n              node {\r\n                id\r\n                childImageSharp {\r\n                    fluid(maxWidth: 100) {\r\n                        ...GatsbyImageSharpFluid\r\n                    }\r\n                }\r\n              }\r\n          }\r\n        }\r\n                pics: allFile(filter: {extension: {regex: \"/(jpg)|(jpeg)|(png)/\"}, dir: {eq: \"C:/Users/admin/react/Website/web/src/images/Products/Strips/aurora_strip\"}}) {\r\n          edges {\r\n              node {\r\n                id\r\n                childImageSharp {\r\n                    fluid(maxWidth: 500) {\r\n                        ...GatsbyImageSharpFluid\r\n                    }\r\n                }\r\n              }\r\n          }\r\n        }\r\n    }`)\r\n\r\n    const slideImage = (direction: \"next\" | \"pre\") => {\r\n        switch (direction) {\r\n            case \"next\":\r\n                if (left <= 7)\r\n                    setLeft(left + 1)\r\n                break\r\n\r\n            case \"pre\":\r\n                if (left > 0)\r\n                    setLeft(left - 1)\r\n                break\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    //console.log(\">>>>><<<<<<<\" + data.allFile.edges.length)\r\n\r\n    return (\r\n        <Container fluid >\r\n            <Row>\r\n                {/* ///product Image slider and thumbnails */}\r\n                <Col sm >\r\n                    <Row className={styles.ImageSliderContainer + \" \"}>\r\n                        {/* ///thumbnails container */}\r\n                        <Col sm={2} className={styles.thumbnailsCol + \" -bg-fff- p-0\"} >\r\n                            <div className={\"-bg-fff- d-flex -jus-c--md-up- \" + styles.thumbnailContainer}>\r\n                                <div\r\n                                    ref={thumbnailRef}\r\n                                    className={\"-bg-fff- d-flex flex-md-column position-relative \"}\r\n                                    style={{\r\n                                        position: \"absolute\",\r\n                                        transition: \"top 1s , left 1s\",\r\n                                        top: `-${(() => {\r\n                                            const getCurrentSlideTopOffset = (slide: number) => {\r\n                                                let top = 0\r\n                                                if (slide <= 0)\r\n                                                    return top\r\n                                                else {\r\n                                                    top = (slide * 70)\r\n                                                }\r\n                                                return top\r\n                                            }\r\n                                            if (Dimensions.get(\"window\").width <= 576 || left <= 0)\r\n                                                return 0\r\n                                            const totalSlides = 8\r\n                                            const ScrollViewHeight = totalSlides * 70\r\n                                            if (thumbnailRef.current && ScrollViewHeight > thumbnailRef.current.offsetHeight) {\r\n                                                const viewHeight = thumbnailRef.current.offsetHeight\r\n                                                const currSlideTop = getCurrentSlideTopOffset(left)\r\n                                                const currSlideBottom = getCurrentSlideTopOffset(left) + 70\r\n                                                const desiredMoveOffset = currSlideBottom + ((viewHeight / 2) - 35)\r\n                                                if (currSlideBottom > (viewHeight / 2)) {\r\n                                                    const move = ((left - ((viewHeight / 2) / 70)) * 70)\r\n                                                    if (move > 0 && move <= (ScrollViewHeight - viewHeight))\r\n                                                        return move\r\n                                                    else if (move > (ScrollViewHeight - viewHeight))\r\n                                                        return ScrollViewHeight - viewHeight\r\n                                                }\r\n                                            }\r\n                                            return 0\r\n                                        })()}px`,\r\n                                        left: `-${(() => {\r\n                                            const getCurrentSlideTopOffset = (slide: number) => {\r\n                                                let top = 0\r\n                                                if (slide <= 0)\r\n                                                    return top\r\n                                                else {\r\n                                                    top = (slide * 70)\r\n                                                }\r\n                                                return top\r\n                                            }\r\n                                            if (Dimensions.get(\"window\").width > 576 || left <= 0)\r\n                                                return 0\r\n                                            const totalSlides = 8\r\n                                            const ScrollViewHeight = totalSlides * 70\r\n                                            const viewWidth = Dimensions.get(\"window\").width\r\n                                            console.log(\"calculating offset >> \" + viewWidth)\r\n                                            if (thumbnailRef.current && ScrollViewHeight > viewWidth) {\r\n                                                const currSlideLeft = getCurrentSlideTopOffset(left)\r\n                                                const currSlideRight = getCurrentSlideTopOffset(left) + 70\r\n                                                const desiredMoveOffset = currSlideRight + ((viewWidth / 2) - 35)\r\n                                                if (currSlideRight > (viewWidth / 2)) {\r\n                                                    const move = ((left - ((viewWidth / 2) / 70)) * 70)\r\n                                                    if (move > 0 && move <= (ScrollViewHeight - viewWidth))\r\n                                                        return move\r\n                                                    else if (move > (ScrollViewHeight - viewWidth))\r\n                                                        return ScrollViewHeight - viewWidth\r\n                                                }\r\n                                            }\r\n                                            return 0\r\n                                        })()}px`,\r\n                                    }}>\r\n                                    {data.thumbs.edges.map((edge) => {\r\n                                        return (\r\n                                            <div className=\"-my-10- -mx-10-\" style={{ minHeight: 50, minWidth: 50 }}>\r\n                                                <Img fluid={edge.node.childImageSharp.fluid} />\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <div className={styles.thumbnailArrow + \" \" + styles.thumbnailDown + \" \" + styles.thumbnailRight} onClick={() => { slideImage(\"next\") }}></div>\r\n                                <div className={styles.thumbnailArrow + \" \" + styles.thumbnailUp + \" \" + styles.thumbnailLeft} onClick={() => { slideImage(\"pre\") }}></div>\r\n                            </div>\r\n                        </Col>\r\n                        {/* ///slider container */}\r\n                        <Col sm={10} style={{ overflow: \"hidden\" }}>\r\n                            <div\r\n                                ref={sliderRef}\r\n                                style={{\r\n                                    width: `${data.pics.edges.length * 100}%`,\r\n                                    //backgroundColor: \"red\",\r\n                                    position: \"absolute\",\r\n                                    top: 0,\r\n                                    left: `-${left * 100}%`,\r\n                                    transition: \"left 1s\",\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"row\"\r\n                                }}\r\n                            >\r\n                                {data.pics.edges.map((edge) => {\r\n                                    return (\r\n                                        <div className=\"\" style={{ flex: 1 }}>\r\n                                            <Img fluid={edge.node.childImageSharp.fluid} />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                {/* ///Product info accordion */}\r\n                <Col sm style={{ backgroundColor: \"green\" }}>\r\n                    Image Slider\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}