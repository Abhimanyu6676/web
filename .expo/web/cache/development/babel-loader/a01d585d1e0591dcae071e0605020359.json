{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\react\\\\Website\\\\web\\\\src\\\\components\\\\seo.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { StaticQuery } from \"gatsby\";\n\nfunction SEO(_ref) {\n  var description = _ref.description,\n      lang = _ref.lang,\n      meta = _ref.meta,\n      title = _ref.title;\n  description = \"\";\n  lang = \"\";\n  return React.createElement(StaticQuery, {\n    query: \"63159454\",\n    render: function render(data) {\n      var _data$site$siteMetada, _site$siteMetadata;\n\n      var metaDescription = description || data.site.siteMetadata.description;\n      var defaultTitle = (_data$site$siteMetada = data.site.siteMetadata) == null ? void 0 : _data$site$siteMetada.title;\n      console.log(\">>>>>>>>>>>>>>\");\n      console.log(data);\n      return React.createElement(Helmet, {\n        htmlAttributes: {\n          lang: lang\n        },\n        title: title,\n        titleTemplate: defaultTitle ? \"%s | \" + defaultTitle : null,\n        meta: [{\n          name: \"description\",\n          content: metaDescription\n        }, {\n          property: \"og:title\",\n          content: title\n        }, {\n          property: \"og:description\",\n          content: metaDescription\n        }, {\n          property: \"og:type\",\n          content: \"website\"\n        }, {\n          name: \"twitter:card\",\n          content: \"summary\"\n        }, {\n          name: \"twitter:creator\",\n          content: ((_site$siteMetadata = site.siteMetadata) == null ? void 0 : _site$siteMetadata.author) || \"\"\n        }, {\n          name: \"twitter:title\",\n          content: title\n        }, {\n          name: \"twitter:description\",\n          content: metaDescription\n        }].concat(meta),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  });\n}\n\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  description: \"\"\n};\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\nexport default SEO;","map":{"version":3,"sources":["C:/Users/admin/react/Website/web/src/components/seo.js"],"names":["React","PropTypes","Helmet","StaticQuery","SEO","description","lang","meta","title","data","metaDescription","site","siteMetadata","defaultTitle","console","log","name","content","property","author","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"mappings":";AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,WAAT,QAAqC,QAArC;;AAEA,SAASC,GAAT,OAAiD;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,KAAS,QAATA,KAAS;AAC/CH,EAAAA,WAAW,GAAG,EAAd;AACAC,EAAAA,IAAI,GAAG,EAAP;AACA,SACE,oBAAC,WAAD;AACE,IAAA,KAAK,YADP;AAYE,IAAA,MAAM,EAAE,gBAAAG,IAAI,EAAI;AAAA;;AACd,UAAMC,eAAe,GAAGL,WAAW,IAAII,IAAI,CAACE,IAAL,CAAUC,YAAV,CAAuBP,WAA9D;AACA,UAAMQ,YAAY,4BAAGJ,IAAI,CAACE,IAAL,CAAUC,YAAb,qBAAG,sBAAwBJ,KAA7C;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,aACE,oBAAC,MAAD;AACE,QAAA,cAAc,EAAE;AACdH,UAAAA,IAAI,EAAJA;AADc,SADlB;AAIE,QAAA,KAAK,EAAEE,KAJT;AAKE,QAAA,aAAa,EAAEK,YAAY,aAAWA,YAAX,GAA4B,IALzD;AAME,QAAA,IAAI,EAAE,CACJ;AACEG,UAAAA,IAAI,eADN;AAEEC,UAAAA,OAAO,EAAEP;AAFX,SADI,EAKJ;AACEQ,UAAAA,QAAQ,YADV;AAEED,UAAAA,OAAO,EAAET;AAFX,SALI,EASJ;AACEU,UAAAA,QAAQ,kBADV;AAEED,UAAAA,OAAO,EAAEP;AAFX,SATI,EAaJ;AACEQ,UAAAA,QAAQ,WADV;AAEED,UAAAA,OAAO;AAFT,SAbI,EAiBJ;AACED,UAAAA,IAAI,gBADN;AAEEC,UAAAA,OAAO;AAFT,SAjBI,EAqBJ;AACED,UAAAA,IAAI,mBADN;AAEEC,UAAAA,OAAO,EAAE,uBAAAN,IAAI,CAACC,YAAL,wCAAmBO,MAAnB;AAFX,SArBI,EAyBJ;AACEH,UAAAA,IAAI,iBADN;AAEEC,UAAAA,OAAO,EAAET;AAFX,SAzBI,EA6BJ;AACEQ,UAAAA,IAAI,uBADN;AAEEC,UAAAA,OAAO,EAAEP;AAFX,SA7BI,EAiCJU,MAjCI,CAiCGb,IAjCH,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AA2CD,KA5DH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAmED;;AAEDH,GAAG,CAACiB,YAAJ,GAAmB;AACjBf,EAAAA,IAAI,MADa;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBF,EAAAA,WAAW;AAHM,CAAnB;AAMAD,GAAG,CAACkB,SAAJ,GAAgB;AACdjB,EAAAA,WAAW,EAAEJ,SAAS,CAACsB,MADT;AAEdjB,EAAAA,IAAI,EAAEL,SAAS,CAACsB,MAFF;AAGdhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,MAA5B,CAHQ;AAIdjB,EAAAA,KAAK,EAAEP,SAAS,CAACsB,MAAV,CAAiBG;AAJV,CAAhB;AAOA,eAAetB,GAAf","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  description = \"\"\r\n  lang = \"\"\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n      render={data => {\r\n        const metaDescription = description || data.site.siteMetadata.description\r\n        const defaultTitle = data.site.siteMetadata?.title\r\n        console.log(\">>>>>>>>>>>>>>\")\r\n        console.log(data)\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: site.siteMetadata?.author || ``,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ].concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"]},"metadata":{},"sourceType":"module"}