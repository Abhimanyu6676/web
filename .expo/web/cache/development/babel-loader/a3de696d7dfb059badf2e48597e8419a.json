{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\react\\\\Website\\\\web\\\\src\\\\components\\\\screens\\\\homePage\\\\section1\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { useStaticQuery } from 'gatsby';\nimport styles from \"./index.module.scss\";\nimport Img from \"gatsby-image\";\n\nvar MainImage = function MainImage() {\n  _s();\n\n  var data = useStaticQuery(\"4224490869\");\n  var sources = [data.mobileImage.childImageSharp.fluid, _objectSpread(_objectSpread({}, data.desktopImage.childImageSharp.fluid), {}, {\n    media: \"(min-width: 768px)\"\n  })];\n  return React.createElement(Img, _defineProperty({\n    fluid: sources,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"__self\", _this));\n};\n\n_s(MainImage, \"2NJItrGYEZzfj2zyg3qTWGZLI2Q=\", false, function () {\n  return [useStaticQuery];\n});\n\n_c = MainImage;\n\nvar section = function section(props) {\n  return React.createElement(\"div\", _defineProperty({\n    className: styles.mainContainer,\n    id: \"testDivID\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"__self\", _this), React.createElement(MainImage, _defineProperty({\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"__self\", _this)), React.createElement(\"div\", _defineProperty({\n    style: {\n      display: \"flex\",\n      flex: 1,\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"__self\", _this)), React.createElement(\"div\", _defineProperty({\n    className: styles.dot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"__self\", _this), React.createElement(\"div\", _defineProperty({\n    className: styles.dot_dot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"__self\", _this))));\n};\n\nexport default section;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainImage\");","map":{"version":3,"sources":["C:/Users/admin/react/Website/web/src/components/screens/homePage/section1/index.tsx"],"names":["MainImage","data","useStaticQuery","sources","media","section","styles","display","flex","position","backgroundColor","top","left","zIndex","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,cAAA,QAAA,QAAA;AAEA,OAAA,MAAA;AACA,OAAA,GAAA,MAAA,cAAA;;AAEA,IAAMA,SAAS,GAATA,SAAAA,SAAAA,GAAkB;AAAA,EAAA,EAAA;;AACtB,MAAMC,IAAI,GAAGC,cAAc,CAA3B,YAA2B,CAA3B;AAoBA,MAAMC,OAAO,GAAG,CACdF,IAAI,CAAJA,WAAAA,CAAAA,eAAAA,CADc,KAAA,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAGTA,IAAI,CAAJA,YAAAA,CAAAA,eAAAA,CAHS,KAAA,CAAA,EAAA,EAAA,EAAA;AAIZG,IAAAA,KAAK,EAJT;AAAgB,GAAA,CAAA,CAAhB;AAOA,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,eAAA,CAAA;AAAK,IAAA,KAAK,EAAV,OAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,QAAA,EADF,KACE,CAAA,CADF;AA5BF,CAAA;;GAAMJ,S;UACSE,c;;;KADTF,S;;AAmCN,IAAMK,OAAO,GAAPA,SAAAA,OAAAA,CAAU,KAAVA,EAA4B;AAChC,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,eAAA,CAAA;AAAK,IAAA,SAAS,EAAEC,MAAM,CAAtB,aAAA;AAAsC,IAAA,EAAE,EAAxC,WAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,QAAA,EAAA,KAAA,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,eAAA,CAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,QAAA,EADF,KACE,CAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,eAAA,CAAA;AAAK,IAAA,KAAK,EAAE;AACVC,MAAAA,OAAO,EADG,MAAA;AAEVC,MAAAA,IAAI,EAFM,CAAA;AAGVC,MAAAA,QAAQ,EAHE,UAAA;AAIVC,MAAAA,eAAe,EAJL,MAAA;AAKVC,MAAAA,GAAG,EALO,CAAA;AAMVC,MAAAA,IAAI,EANM,CAAA;AAOVC,MAAAA,MAAM,EAPI,CAAA;AAQVC,MAAAA,MAAM,EARR;AAAY,KAAZ;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,QAAA,EAFF,KAEE,CAAA,CAFF,EAYE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,eAAA,CAAA;AAAK,IAAA,SAAS,EAAER,MAAM,CAAtB,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,QAAA,EAAA,KAAA,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,eAAA,CAAA;AAAK,IAAA,SAAS,EAAEA,MAAM,CAAtB,OAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,QAAA,EAdN,KAcM,CAAA,CADF,CAZF,CADF;AADF,CAAA;;AAqBA,eAAA,OAAA","sourcesContent":["import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport { Container } from 'react-bootstrap';\r\nimport styles from \"./index.module.scss\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst MainImage = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n        mobileImage: file(relativePath: { eq: \"homepage/section1/main-mobile.png\" }) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1000, quality: 100) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        desktopImage: file(\r\n          relativePath: { eq: \"homepage/section1/main.png\" }\r\n        ) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 2000, quality: 100) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }       \r\n    `)\r\n  const sources = [\r\n    data.mobileImage.childImageSharp.fluid,\r\n    {\r\n      ...data.desktopImage.childImageSharp.fluid,\r\n      media: `(min-width: 768px)`,\r\n    },\r\n  ]\r\n  return (\r\n    <Img fluid={sources} />\r\n  )\r\n}\r\n\r\n\r\ninterface Props { }\r\nconst section = (props: Props) => {\r\n  return (\r\n    <div className={styles.mainContainer} id=\"testDivID\">\r\n      <MainImage />\r\n      <div style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        position: \"absolute\",\r\n        backgroundColor: \"#fff\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        height: \"100%\"\r\n      }}></div>\r\n      <div className={styles.dot}>\r\n        <div className={styles.dot_dot}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default section;"]},"metadata":{},"sourceType":"module"}