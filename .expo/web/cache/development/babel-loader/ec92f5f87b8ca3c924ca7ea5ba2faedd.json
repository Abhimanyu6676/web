{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\react\\\\Website\\\\web\\\\src\\\\components\\\\seo.tsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { StaticQuery } from \"gatsby\";\n\nfunction SEO(_ref) {\n  var _this = this;\n\n  var description = _ref.description,\n      lang = _ref.lang,\n      meta = _ref.meta,\n      title = _ref.title;\n  description = \"\";\n  lang = \"\";\n  return React.createElement(StaticQuery, _defineProperty({\n    query: \"63159454\",\n    render: function render(_ref2) {\n      var _site$siteMetadata, _site$siteMetadata2;\n\n      var site = _ref2.site;\n      var metaDescription = description || site.siteMetadata.description;\n      var defaultTitle = (_site$siteMetadata = site.siteMetadata) === null || _site$siteMetadata === void 0 ? void 0 : _site$siteMetadata.title;\n      console.log(\">>>>>>>>>>>>>>\");\n      console.log(site);\n      return React.createElement(Helmet, _defineProperty({\n        htmlAttributes: {\n          lang: lang\n        },\n        title: title,\n        titleTemplate: defaultTitle ? \"%s | \" + defaultTitle : null,\n        meta: [{\n          name: \"description\",\n          content: metaDescription\n        }, {\n          property: \"og:title\",\n          content: title\n        }, {\n          property: \"og:description\",\n          content: metaDescription\n        }, {\n          property: \"og:type\",\n          content: \"website\"\n        }, {\n          name: \"twitter:card\",\n          content: \"summary\"\n        }, {\n          name: \"twitter:creator\",\n          content: ((_site$siteMetadata2 = site.siteMetadata) === null || _site$siteMetadata2 === void 0 ? void 0 : _site$siteMetadata2.author) || \"\"\n        }, {\n          name: \"twitter:title\",\n          content: title\n        }, {\n          name: \"twitter:description\",\n          content: metaDescription\n        }].concat(meta),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"__self\", _this));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"__self\", this));\n}\n\n_c = SEO;\nSEO.defaultProps = {\n  lang: \"en\",\n  meta: [],\n  description: \"\"\n};\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\nexport default SEO;\n\nvar _c;\n\n$RefreshReg$(_c, \"SEO\");","map":{"version":3,"sources":["C:/Users/admin/react/Website/web/src/components/seo.tsx"],"names":["SEO","description","lang","meta","title","site","metaDescription","defaultTitle","console","name","content","property","PropTypes"],"mappings":"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","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  description = \"\"\r\n  lang = \"\"\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n      render={({ site }) => {\r\n        const metaDescription = description || site.siteMetadata.description\r\n        const defaultTitle = site.siteMetadata?.title\r\n        console.log(\">>>>>>>>>>>>>>\")\r\n        console.log(site)\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: site.siteMetadata?.author || ``,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ].concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"]},"metadata":{},"sourceType":"module"}