{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\react\\\\Website\\\\web\\\\src\\\\components\\\\screens\\\\homePage\\\\section2\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styles from \"./index.module.scss\";\nexport default _s(function (props) {\n  _s();\n\n  var thumbnailRef = useRef();\n  var sliderRef = useRef();\n\n  var _useState = useState(0),\n      width = _useState[0],\n      setWidth = _useState[1];\n\n  var _useState2 = useState(0),\n      left = _useState2[0],\n      setLeft = _useState2[1];\n\n  var slideImage = function slideImage(direction) {\n    switch (direction) {\n      case \"next\":\n        if (left <= 7) setLeft(left + 1);\n        break;\n\n      case \"pre\":\n        if (left > 0) setLeft(left - 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(Container, _defineProperty({\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"__self\", _this), React.createElement(Row, _defineProperty({\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"__self\", _this), React.createElement(Col, _defineProperty({\n    sm: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"__self\", _this), React.createElement(Row, _defineProperty({\n    className: styles.ImageSliderContainer + \" \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"__self\", _this), React.createElement(Col, _defineProperty({\n    sm: 2,\n    className: styles.thumbnailsCol + \" -bg-f0f- p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"__self\", _this), React.createElement(\"div\", _defineProperty({\n    className: \"-bg-ff0- d-flex -jus-c- \" + styles.thumbnailContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"__self\", _this), React.createElement(\"div\", _defineProperty({\n    ref: thumbnailRef,\n    className: \"-bg-0ff- d-flex flex-md-column position-relative \",\n    style: {\n      position: \"absolute\",\n      transition: \"top 1s , left 1s\",\n      top: function () {\n        var getCurrentSlideTopOffset = function getCurrentSlideTopOffset(slide) {\n          var top = 0;\n          if (slide <= 0) return top;else {\n            top = slide * 60;\n          }\n          return top;\n        };\n\n        if (Dimensions.get(\"window\").width <= 576 && left <= 0) return 0;\n\n        if (thumbnailRef.current) {\n          var totalSlides = 8;\n          var ScrollViewHeight = 8 * 60;\n          var currSlideTop = getCurrentSlideTopOffset(left);\n          var currSlideBottom = getCurrentSlideTopOffset(left) + 60;\n          var desiredMoveOffset = currSlideBottom + (thumbnailRef.current.offsetHeight / 2 - 30);\n\n          if (desiredMoveOffset <= ScrollViewHeight) {\n            console.log(\"desiredMove :: \" + (desiredMoveOffset - thumbnailRef.current.offsetHeight));\n            return -(desiredMoveOffset - thumbnailRef.current.offsetHeight);\n          }\n        }\n\n        return 0;\n      }() + \"px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, \"__self\", _this), [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"].map(function () {\n    return React.createElement(\"div\", _defineProperty({\n      className: \"my-md-2 -mx-10-\",\n      style: {\n        minHeight: 50,\n        minWidth: 50,\n        backgroundColor: \"blue\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, \"__self\", _this));\n  })), React.createElement(\"div\", _defineProperty({\n    className: styles.thumbnailArrow + \" \" + styles.thumbnailDown + \" \" + styles.thumbnailRight,\n    onClick: function onClick() {\n      slideImage(\"next\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"__self\", _this)), React.createElement(\"div\", _defineProperty({\n    className: styles.thumbnailArrow + \" \" + styles.thumbnailUp + \" \" + styles.thumbnailLeft,\n    onClick: function onClick() {\n      slideImage(\"pre\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"__self\", _this)))), React.createElement(Col, _defineProperty({\n    sm: 10,\n    style: {\n      overflow: \"hidden\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"__self\", _this), React.createElement(\"div\", _defineProperty({\n    ref: sliderRef,\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"red\",\n      position: \"absolute\",\n      top: 0,\n      left: \"-\" + left * 100 + \"%\",\n      transition: \"left 1s\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"__self\", _this), React.createElement(\"h1\", _defineProperty({\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"__self\", _this), width))))), React.createElement(Col, _defineProperty({\n    sm: true,\n    style: {\n      backgroundColor: \"green\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"__self\", _this), \"Image Slider\")));\n}, \"UaUnxEE9rVLyJ8VFavvv1BD8o88=\");","map":{"version":3,"sources":["C:/Users/admin/react/Website/web/src/components/screens/homePage/section2/index.tsx"],"names":["thumbnailRef","useRef","sliderRef","width","setWidth","useState","left","setLeft","slideImage","styles","position","transition","top","getCurrentSlideTopOffset","slide","Dimensions","totalSlides","ScrollViewHeight","currSlideTop","currSlideBottom","desiredMoveOffset","console","minHeight","minWidth","backgroundColor","overflow","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Dimensions } from 'react-native';\r\nimport styles from \"./index.module.scss\";\r\n\r\n\r\n\r\ninterface Props { }\r\nexport default (props: Props) => {\r\n    const thumbnailRef = useRef()\r\n    const sliderRef = useRef()\r\n    const [width, setWidth] = useState(0)\r\n    const [left, setLeft] = useState(0)\r\n\r\n    const slideImage = (direction: \"next\" | \"pre\") => {\r\n        switch (direction) {\r\n            case \"next\":\r\n                if (left <= 7)\r\n                    setLeft(left + 1)\r\n                break\r\n\r\n            case \"pre\":\r\n                if (left > 0)\r\n                    setLeft(left - 1)\r\n                break\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container fluid >\r\n            <Row>\r\n                {/* product Image slider and thumbnails */}\r\n                <Col sm >\r\n                    <Row className={styles.ImageSliderContainer + \" \"}>\r\n                        <Col sm={2} className={styles.thumbnailsCol + \" -bg-f0f- p-0\"} >\r\n                            <div className={\"-bg-ff0- d-flex -jus-c- \" + styles.thumbnailContainer}>\r\n                                <div\r\n                                    ref={thumbnailRef}\r\n                                    className={\"-bg-0ff- d-flex flex-md-column position-relative \"}\r\n                                    style={{\r\n                                        position: \"absolute\",\r\n                                        transition: \"top 1s , left 1s\",\r\n                                        top: `${(() => {\r\n                                            const getCurrentSlideTopOffset = (slide: number) => {\r\n                                                let top = 0\r\n                                                if (slide <= 0)\r\n                                                    return top\r\n                                                else {\r\n                                                    top = (slide * 60)\r\n                                                }\r\n                                                return top\r\n                                            }\r\n                                            if (Dimensions.get(\"window\").width <= 576 && left <= 0)\r\n                                                return 0\r\n                                            if (thumbnailRef.current) {\r\n                                                const totalSlides = 8\r\n                                                const ScrollViewHeight = 8 * 60\r\n                                                const currSlideTop = getCurrentSlideTopOffset(left)\r\n                                                const currSlideBottom = getCurrentSlideTopOffset(left) + 60\r\n                                                const desiredMoveOffset = currSlideBottom + ((thumbnailRef.current.offsetHeight / 2) - 30)\r\n                                                if (desiredMoveOffset <= ScrollViewHeight) {\r\n                                                    console.log(\"desiredMove :: \" + (desiredMoveOffset - thumbnailRef.current.offsetHeight))\r\n                                                    return -(desiredMoveOffset - thumbnailRef.current.offsetHeight)\r\n                                                }\r\n                                            }\r\n                                            return 0\r\n                                        })()}px`,\r\n                                    }}>\r\n                                    {[\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"].map(() => {\r\n                                        return (\r\n                                            <div className=\"my-md-2 -mx-10-\" style={{ minHeight: 50, minWidth: 50, backgroundColor: \"blue\" }}></div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <div className={styles.thumbnailArrow + \" \" + styles.thumbnailDown + \" \" + styles.thumbnailRight} onClick={() => { slideImage(\"next\") }}></div>\r\n                                <div className={styles.thumbnailArrow + \" \" + styles.thumbnailUp + \" \" + styles.thumbnailLeft} onClick={() => { slideImage(\"pre\") }}></div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={10} style={{ overflow: \"hidden\" }}>\r\n                            <div\r\n                                ref={sliderRef}\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    width: \"100%\",\r\n                                    backgroundColor: \"red\",\r\n                                    position: \"absolute\",\r\n                                    top: 0,\r\n                                    left: `-${left * 100}%`,\r\n                                    transition: \"left 1s\",\r\n                                }}\r\n                            >\r\n                                <h1>{width}</h1>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                {/* Product infod accordion */}\r\n                <Col sm style={{ backgroundColor: \"green\" }}>\r\n                    Image Slider\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}